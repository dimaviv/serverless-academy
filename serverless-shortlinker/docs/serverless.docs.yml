openapi: "3.0.0"
info:
  title: "Your API Name"
  version: "1.0.0"
  description: "Description of your API"
servers:
  - url: "https://your-api-endpoint.com"
paths:
  /login:
    post:
      tags:
        - Authorization
      summary: "User login"
      description: "Allows a user to login."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: "Successful login"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: "Invalid request"
        '401':
          description: "Invalid credentials"
        '500':
          description: "Internal Server Error"
  /register:
    post:
      tags:
        - Authorization
      summary: "User registration"
      description: "Registers a new user."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '200':
          description: "Successful registration"
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: "Invalid request"
        '401':
          description: "User already exists"
        '500':
          description: "Internal Server Error"
  /{linkId}:
    get:
      tags:
        - Links
      summary: "Redirect to a URL"
      description: "Redirects to the original URL based on the shortened link ID."
      parameters:
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      responses:
        '301':
          description: "Redirect to the original URL"
          headers:
            Location:
              schema:
                type: string
        '400':
          description: "Link not found or inactive"
        '500':
          description: "Internal Server Error"
  /link/user:
    get:
      tags:
        - Links
      summary: "Get user's links"
      description: "Retrieves all links created by a specific user."
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: "List of user's links"
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    items:
                      $ref: '#/components/schemas/Link'
        '500':
          description: "Internal Server Error"
  /link/shorten:
    post:
      tags:
        - Links
      summary: "Create a shortened link"
      description: "Generates a shortened link for a given URL."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  format: uri
                expire:
                  type: string
                  enum: [ once, 1d, 3d, 7d ]
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: "Shortened link created successfully"
          content:
            application/json:
              schema:
                type: object
                properties:
                  shortLink:
                    type: string
        '500':
          description: "Internal Server Error"
  /link/deactivate/{linkId}:
    post:
      tags:
        - Links
      summary: "Deactivate a link"
      description: "Deactivates a specific link."
      parameters:
        - in: path
          name: linkId
          required: true
          schema:
            type: string
      security:
        - BearerAuth: [ ]
      responses:
        '200':
          description: "Successfully deactivated the link"
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  updatedLink:
                    $ref: '#/components/schemas/Link'
        '500':
          description: "Internal Server Error"

components:
  schemas:
    Link:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
          format: uri
        userId:
          type: string
        createdAt:
          type: string
          format: date-time
        expire:
          type: string
          nullable: true
        expireAt:
          type: string
          format: date-time
          nullable: true
        isActive:
          type: boolean
        visitCount:
          type: integer
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT


